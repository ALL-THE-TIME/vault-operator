#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

function print_env_vars {
    echo "GOPATH: ${GOPATH}"
    echo "UNIQUE_BUILD_NAME: ${UNIQUE_BUILD_NAME}"
    echo "OPERATOR_IMAGE: ${OPERATOR_IMAGE}"
    echo "TEST_NAMESPACE: ${TEST_NAMESPACE}"
}

: ${UNIQUE_BUILD_NAME:?"Need to set UNIQUE_BUILD_NAME"}
: ${TEST_NAMESPACE:?"Need to set TEST_NAMESPACE"}

origpwd=$(pwd)
GOPATH="${origpwd}/build-${UNIQUE_BUILD_NAME}/gopath/"
rm -rf $GOPATH
mkdir -p $GOPATH
cd $GOPATH
export GOPATH=$(pwd)
export PATH=$GOPATH/bin:$PATH

mkdir -p $GOPATH/src/github.com/coreos-inc
ln -s "${origpwd}" $GOPATH/src/github.com/coreos-inc/vault-operator
cd $GOPATH/src/github.com/coreos-inc/vault-operator

cleanup() {
	echo "cleaning up ==="
	cd $origpwd
	rm -rf "${origpwd}/build-${UNIQUE_BUILD_NAME}"
}

trap cleanup EXIT

glide install --strip-vendor 1>/dev/null

export OPERATOR_IMAGE=${OPERATOR_IMAGE:-"quay.io/coreos/vault-operator-dev:$UNIQUE_BUILD_NAME"}

print_env_vars

if "hack/test"; then
	echo "Success! ==="
else
	echo "Fail! ==="
	exit 1
fi
